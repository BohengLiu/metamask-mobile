aliases:
  - &restore-node-cache
    keys:
      - v1.0.8-node-{{ .Branch }}-{{ checksum "package.json" }}
      - v1.0.8-node-{{ .Branch }}
  - &save-node-cache
    key: v1.0.8-node-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules
  - &install-node-dependencies
      |
        rm -rf node_modules/websocket/.git && yarn install --network-timeout 300000 --frozen-lockfile

defaults: &defaults
  working_directory: ~/MetaMask

version: 2
jobs:
  prep-deps:
    <<: *defaults
    macos:
      xcode: 10.3.0
    steps:
      - checkout:
          path: ~/MetaMask
      - run:
          name: Install nvm, node and yarn
          command:
            |
              set +e
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
              nvm install 10
              nvm alias default 10
              curl -o- -L https://yarnpkg.com/install.sh | bash
              echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
              source ~/.nvm/nvm.sh
              source ~/.bashrc
              rm -rf node_modules/websocket/.git && yarn install --network-timeout 300000 --frozen-lockfile
      - run: *install-node-dependencies
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
  prep-node-deps:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: *restore-node-cache
      - run: *install-node-dependencies
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
      - save_cache: *save-node-cache

  lint:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn lint

  test-unit:
    <<: *defaults
    parallelism: 3
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn test:unit -- -w 3
    #   - persist_to_workspace:
    #       root: .
    #       paths:
    #         - coverage

  test-e2e-ios:
    <<: *defaults
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Load dependencies
          command:
            |
              brew update
              brew tap wix/brew
              brew install --HEAD applesimutils
              yarn install -g detox-cli
      - run: echo $IOS_ENV | tr "|" "\n" > .ios.env
      - run: detox clean-framework-cache && detox build-framework-cache
      - run: detox build --configuration ios.sim.release && detox test --configuration ios.sim.release --cleanup
  upload-coverage:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn install codecov
      - run: ./node_modules/bin/codecov

  all-tests-pass:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - run:
          name:  All Tests Passed
          command: echo 'weew - everything passed!'
  publish-pre-release-android:
    working_directory:  ~/MetaMask
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/MetaMask
      - attach_workspace:
          at: ~/MetaMask
      - run:
          name: build:accept-android-licenses
          command: (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - run:
          name: build:pre-release
          command:
            |
              yarn build:android:pre-release:bundle
      - store_artifacts:
          path: android/app/build/outputs/bundle/release
          destination: bundle
      - store_artifacts:
          path: android/app/build/outputs/apk/release
          destination: builds
      - store_artifacts:
          path: sourcemaps/android
          destination: sourcemaps-android
      - run:
          name: Announcing pre-release
          command: yarn build:announce
  publish-pre-release-ios:
    macos:
      xcode: 10.3.0
    working_directory:  ~/MetaMask
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/MetaMask
      - attach_workspace:
          at: ~/MetaMask
      - run:
          name: pre-release
          command: yarn build:ios:pre-release
      - store_artifacts:
          path: sourcemaps/ios
          destination: sourcemaps-ios
workflows:
  version: 2
  full_test:
    jobs:
      - prep-deps
    #   - lint:
    #       requires:
    #         - prep-node-deps
    #   - test-unit:
    #       requires:
    #         - prep-node-deps
    # #   - test-e2e-ios:
    # #       requires:
    # #         - test-unit
    #   - all-tests-pass:
    #       requires:
    #         - lint
    #         - test-unit
    #         # - test-e2e-ios
    # #   - upload-coverage:
    # #       requires:
    # #         - test-unit
      - publish-pre-release-ios:
          requires:
            - prep-deps
      - publish-pre-release-android:
          requires:
            - publish-pre-release-ios
